/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };


    behaviors {
        tdQ: tap_dance_Q {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <170>;
            bindings = <&kp Q>, <&kp LS(Q)>;
        };
        tdW: tap_dance_W {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <170>;
            bindings = <&kp W>, <&kp LS(W)>;
        };
        tdE: tap_dance_E {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <170>;
            bindings = <&kp E>, <&kp LS(E)>;
        };
        tdR: tap_dance_R {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <170>;
            bindings = <&kp R>, <&kp LS(R)>;
        };
        tdT: tap_dance_T {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <170>;
            bindings = <&kp T>, <&kp LS(T)>;
        };
        tdO: tap_dance_O {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <170>;
            bindings = <&kp O>, <&kp LS(O)>;
        };
        tdP: tap_dance_P {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <170>;
            bindings = <&kp P>, <&kp LS(P)>;
        };
        tdSL: tap_dance_SL {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <170>;
            bindings = <&kp FSLH>, <&kp LS(FSLH)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo3 {
            bindings = <&to 1>;
            key-positions = <50 51>;
        };

        layer_2 {
            bindings = <&to 2>;
            key-positions = <52 50>;
        };

        layer_3 {
            bindings = <&none>;
            key-positions = <50 53>;
        };

        default {
            bindings = <&to 0>;
            key-positions = <53 54 52>;
        };

        layer_0 {
            bindings = <&to 0>;
            key-positions = <55 56 57>;
        };
    };

    macros {
        symbol201502: symbol201502 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp N2 &kp N0 &kp N1 &kp N5 &kp N0 &kp N2>,
                <&macro_wait_time 30>;

            label = "SYMBOL201502";
        };

        pw: pw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp N3 &kp N0 &kp N1 &kp N5 &kp C &kp J &kp S &kp T &kp K &kp STAR>,
                <&macro_wait_time 30>;

            label = "pw";
        };

        ttt: ttt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LS(T) &kp LS(T) &kp LS(T) &kp N3 &kp N3 &kp N5 &kp N6 &kp N4>,
                <&macro_wait_time 30>;

            label = "TTT";
        };

        ss: ss {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SCROLLLOCK &kp SCROLLLOCK>, <&macro_wait_time 30>;

            label = "SS";
        };

        pp: pp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp N3 &kp N0 &kp N1 &kp N5 &kp C &kp J &kp S &kp T &kp K>,
                <&macro_wait_time 30>;

            label = "PP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Main_layer {
            display-name = "Main";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESCAPE           &kp N1  &kp N2        &kp N3        &kp N4     &kp N5                         &kp N6     &kp N7    &kp N8         &kp N9     &kp N0    &kp BACKSPACE
&kp TAB              &tdQ    &tdW          &tdE          &tdR       &tdT                           &kp Y      &kp U     &kp I          &tdO       &tdP      &kp DEL
&kp LEFT_SHIFT       &kp A   &kp S         &kp D         &kp F      &kp G                          &kp H      &kp J     &kp K          &kp L      &kp SEMI  &kp ENTER
&mt LEFT_SHIFT RALT  &kp Z   &kp X         &kp C         &kp V      &kp B      &kp LC(P)    &ss    &kp N      &kp M     &kp COMMA      &kp DOT    &tdSL     &kp RSHFT
                             &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp SPACE  &mo 2        &mo 1  &kp SPACE  &kp RALT  &kp RIGHT_ALT  &kp ENTER
            >;

            sensor-bindings =
                <&inc_dec_kp LC(C) LC(V)>,
                <&inc_dec_kp ENTER ENTER>;
        };

        layer_1 {
            display-name = "1";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp LC(LA(DELETE))  &kp F1  &kp F2         &kp F3        &kp F4        &kp F5                          &kp PRINTSCREEN  &kp SCROLLLOCK  &kp END       &kp PLUS         &kp QUESTION     &trans
&kp TAB             &ttt    &kp N7         &kp NUMBER_8  &kp NUMBER_9  &kp MINUS                       &kp NUMBER_7     &kp NUMBER_8    &kp NUMBER_9  &kp MINUS        &kp EXCLAMATION  &trans
&trans              &pw     &kp NUMBER_4   &kp N5        &kp NUMBER_6  &kp NUMBER_0                    &kp NUMBER_4     &kp NUMBER_5    &kp NUMBER_6  &kp KP_MULTIPLY  &kp CARET        &trans
&trans              &trans  &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &trans    &trans  &kp NUMBER_1     &kp NUMBER_2    &kp NUMBER_3  &kp KP_DIVIDE    &kp TILDE        &kp TILDE
                            &kp RIGHT_ALT  &kp LC(C)     &kp LC(V)     &kp LC(P)     &trans    &trans  &kp NUMBER_0     &trans          &trans        &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(C) LC(V)>,
                <&inc_dec_kp ENTER ENTER>;
        };

        layer_2 {
            display-name = "2";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                       &kp CARET       &pp             &kp STAR         &trans                &trans                 &kp BACKSPACE
&trans      &out OUT_TOG     &trans        &trans          &trans          &pw                                &ttt            &pw             &kp TAB          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans      &kp EQUAL        &kp PLUS      &kp EQUAL       &kp UP_ARROW    &kp UNDER                          &kp MINUS       &kp UP_ARROW    &kp EQUAL        &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans      &kp KP_MULTIPLY  &kp SLASH     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE
                             &trans        &trans          &trans          &trans           &trans    &trans  &trans          &trans          &trans           &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(C) LC(V)>,
                <&inc_dec_kp ENTER ENTER>;
        };
    };
};
